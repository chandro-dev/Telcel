// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorio;

#nullable disable

namespace Repositorio.Migrations
{
    [DbContext(typeof(ContextDb))]
    [Migration("20230506163422_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entidades.cliente", b =>
                {
                    b.Property<int>("cedula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("cedula"));

                    b.Property<string>("contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dirrecion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("id")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("cedula");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("Entidades.factura", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("clientecedula")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_entrega")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipo_pago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("clientecedula");

                    b.ToTable("facturas");
                });

            modelBuilder.Entity("Entidades.producto", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<bool>("Envio")
                        .HasColumnType("bit");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<int>("descuento")
                        .HasColumnType("int");

                    b.Property<int?>("facturaid")
                        .HasColumnType("int");

                    b.Property<byte[]>("imagen")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("precio")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("facturaid");

                    b.ToTable("producto");

                    b.HasDiscriminator<string>("Discriminator").HasValue("producto");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Entidades.asesorio", b =>
                {
                    b.HasBaseType("Entidades.producto");

                    b.Property<string>("referencia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("asesorio");
                });

            modelBuilder.Entity("Entidades.celular", b =>
                {
                    b.HasBaseType("Entidades.producto");

                    b.Property<string>("almacenamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("camara")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("procesador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("producto", t =>
                        {
                            t.Property("almacenamiento")
                                .HasColumnName("celular_almacenamiento");

                            t.Property("procesador")
                                .HasColumnName("celular_procesador");

                            t.Property("ram")
                                .HasColumnName("celular_ram");
                        });

                    b.HasDiscriminator().HasValue("celular");
                });

            modelBuilder.Entity("Entidades.computador", b =>
                {
                    b.HasBaseType("Entidades.producto");

                    b.Property<string>("almacenamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("procesador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ram")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjeta_madre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tarjeta_video")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("computador");
                });

            modelBuilder.Entity("Entidades.factura", b =>
                {
                    b.HasOne("Entidades.cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clientecedula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("cliente");
                });

            modelBuilder.Entity("Entidades.producto", b =>
                {
                    b.HasOne("Entidades.factura", null)
                        .WithMany("produto")
                        .HasForeignKey("facturaid");
                });

            modelBuilder.Entity("Entidades.factura", b =>
                {
                    b.Navigation("produto");
                });
#pragma warning restore 612, 618
        }
    }
}
